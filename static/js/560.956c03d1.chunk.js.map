{"version":3,"file":"static/js/560.956c03d1.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/RightSideBar/RightSideBar.module.scss?519c","components/RightSideBar/RightSideBar.jsx","webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/calorieSchema.js","helpers/validation/newProductSchema.js","webpack://slim-mom-frontend/./src/pages/CalculatorPage/CalculatorPage.module.scss?5abd","services/dailyCalorieApi.js","redux/dailyCalorie/dailyCalorieOperations.js","webpack://slim-mom-frontend/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.scss?c79a","components/DailyCaloriesForm/DailyCaloriesForm.jsx","pages/CalculatorPage/CalculatorPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"blockWrapper\":\"RightSideBar_blockWrapper__4AK5p\",\"heading\":\"RightSideBar_heading__uDkBd\",\"list\":\"RightSideBar_list__sE6t3\",\"foodList\":\"RightSideBar_foodList__O7WPt\",\"calorieItem\":\"RightSideBar_calorieItem__ceArC\",\"warning\":\"RightSideBar_warning__gqcj-\",\"norm\":\"RightSideBar_norm__C-bla\"};","import { useSelector } from 'react-redux';\nimport {\n  selectCalorieNorm,\n  selectNotRecFood,\n} from 'redux/dailyCalorie/dailyCalorieSlice';\nimport {\n  selectCurrentDate,\n  selectEatenProducts,\n} from 'redux/dailyFood/dailyFoodSlice';\nimport styles from './RightSideBar.module.scss';\n\nexport const RightSideBar = () => {\n  const notRecFood = useSelector(selectNotRecFood);\n  const calorieNorm = useSelector(selectCalorieNorm);\n  const currentDate = useSelector(selectCurrentDate);\n  const eatenProducts = useSelector(selectEatenProducts);\n\n  const consumed = eatenProducts.reduce((acc, item) => {\n    acc += item.calories;\n    return Math.round(acc);\n  }, 0);\n  const left = calorieNorm - consumed;\n  const interest = Math.round((consumed / calorieNorm) * 100);\n\n  return (\n    <>\n      <div className={styles.blockWrapper}>\n        <div>\n          <h2 className={styles.heading}>Summary for {currentDate}</h2>\n          <ul className={styles.list}>\n            <li className={styles.calorieItem}>\n              <span>Left</span>\n              <span>{left > 0 ? left : '000'} kcal </span>\n            </li>\n            <li className={styles.calorieItem}>\n              <span>Consumed</span>\n              <span\n                className={\n                  consumed > calorieNorm ? styles.warning : styles.norm\n                }\n              >\n                {consumed ? consumed : '000'} kcal\n              </span>\n            </li>\n            <li className={styles.calorieItem}>\n              <span>Daily rate</span>\n              <span>{calorieNorm ? calorieNorm : '000'} kcal</span>\n            </li>\n            <li className={styles.calorieItem}>\n              <span>n% of normal</span>\n              <span>{interest ? interest : '000'} %</span>\n            </li>\n          </ul>\n        </div>\n        <div>\n          <h2 className={styles.heading}>Food not recommended</h2>\n          <ul className={styles.foodList}>\n            {notRecFood && notRecFood.length > 0 ? (\n              notRecFood.map((el, i) => (\n                <li key={i}>\n                  <span>{el.en}</span>\n                </li>\n              ))\n            ) : (\n              <li>\n                <span>Your diet will be displayed here</span>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"disable\":\"Button_disable__AF92d\",\"primary\":\"Button_primary__9MLUH\",\"active\":\"Button_active__iTrrO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  disabled = false,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      disabled={disabled}\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup\n    .string()\n    .min(3, 'Min number of characters is 6')\n    .max(15, 'Max number of characters is 15')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  productName: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"calculatorPage\":\"CalculatorPage_calculatorPage__TGglj\",\"SidebarSection\":\"CalculatorPage_SidebarSection__uLqNj\",\"SidebarWrap\":\"CalculatorPage_SidebarWrap__6bJ4T\"};","import axios from 'axios';\n\nexport const getCalorieAuthApi = async calcParams => {\n  const response = await axios.post('/calories/auth', calcParams);\n  return response.data;\n};\n\nexport const getCalorieApi = async calcParams => {\n  const response = await axios.post('/calories', calcParams);\n  return response.data;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getCalorieAuthApi, getCalorieApi } from 'services/dailyCalorieApi';\n\nexport const getCalorieAuth = createAsyncThunk(\n  'calorie/getCalorieAuth',\n  async (calcParams, thunkAPI) => {\n    try {\n      const result = await getCalorieAuthApi(calcParams);\n\n      return result;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const getCalorie = createAsyncThunk(\n  'calorie/getCalorie',\n  async (calcParams, thunkAPI) => {\n    try {\n      const result = await getCalorieApi(calcParams);\n\n      return result;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"caloriesForm\":\"DailyCaloriesForm_caloriesForm__CjEzo\",\"caloriesPadding\":\"DailyCaloriesForm_caloriesPadding__l6bi1\",\"labelText\":\"DailyCaloriesForm_labelText__G+pBd\",\"labelContainer\":\"DailyCaloriesForm_labelContainer__lo97o\",\"formContainerF\":\"DailyCaloriesForm_formContainerF__z+3qH\",\"formContainerS\":\"DailyCaloriesForm_formContainerS__-eZFl\",\"caloriesFormErrorContainer\":\"DailyCaloriesForm_caloriesFormErrorContainer__BGDXs\",\"caloriesFormError\":\"DailyCaloriesForm_caloriesFormError__h-xJl\",\"radioButtonContainer\":\"DailyCaloriesForm_radioButtonContainer__91ucI\",\"radioButtonList\":\"DailyCaloriesForm_radioButtonList__iE1rE\",\"check\":\"DailyCaloriesForm_check__JP1e-\",\"form_button\":\"DailyCaloriesForm_form_button__+DDQQ\",\"formContainerMain\":\"DailyCaloriesForm_formContainerMain__+kjzo\",\"formContainerLeft\":\"DailyCaloriesForm_formContainerLeft__kDDqU\",\"formContainerRight\":\"DailyCaloriesForm_formContainerRight__r2vV7\",\"radioButton\":\"DailyCaloriesForm_radioButton__LfytD\"};","import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { PersistFormikValues } from 'formik-persist-values';\nimport {\n  getCalorie,\n  getCalorieAuth,\n} from 'redux/dailyCalorie/dailyCalorieOperations';\nimport { selectAuthStatus } from 'redux/auth/authSlice';\nimport { routes } from 'utils/routes';\nimport { calorieSchema } from 'helpers/validation';\nimport { Button } from 'components/Button/Button';\nimport styles from './DailyCaloriesForm.module.scss';\n\nexport const DailyCaloriesForm = ({ handleModalOpen }) => {\n  const InputField = ({ label, type, value, name, onChange, onBlur }) => (\n    <label>\n      <Field\n        required\n        type={type}\n        value={value}\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <div className={styles.labelText}>{label}</div>\n    </label>\n  );\n\n  const RadioButton = ({ name, value, id, onChange, onBlur }) => (\n    <li>\n      <Field\n        type=\"radio\"\n        value={value}\n        name={name}\n        id={id}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <label htmlFor={id}>{value}</label>\n      <div className={styles.check}>\n        <div className={styles.inside}></div>\n      </div>\n    </li>\n  );\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authStatus = useSelector(selectAuthStatus);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          currentWeight: '',\n          desiredWeight: '',\n          bloodType: '',\n        }}\n        validateOnBlur\n        validationSchema={calorieSchema}\n        onSubmit={(values, actions) => {\n          const bloodType = +values.bloodType;\n          const allValue = { ...values, bloodType };\n\n          if (authStatus) {\n            dispatch(getCalorieAuth(allValue));\n            navigate(routes.diary);\n          } else {\n            dispatch(getCalorie(allValue));\n            handleModalOpen();\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form\n            className={\n              authStatus\n                ? styles.caloriesForm\n                : `${styles.caloriesForm} ${styles.caloriesPadding}`\n            }\n            onSubmit={handleSubmit}\n          >\n            <h1>Calculate your daily calorie intake right now</h1>\n            <div className={styles.formContainerMain}>\n              <div className={styles.formContainerLeft}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Height *\"\n                    type=\"text\"\n                    name={'height'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.height}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.height && errors.height && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.height}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Age *\"\n                    type=\"text\"\n                    name={'age'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.age}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.age && errors.age && (\n                      <p className={styles.caloriesFormError}>{errors.age}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Current weight *\"\n                    type=\"text\"\n                    name={'currentWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.currentWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.currentWeight && errors.currentWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.currentWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className={styles.formContainerRight}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Desired weight *\"\n                    type=\"text\"\n                    name={'desiredWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.desiredWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.desiredWeight && errors.desiredWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.desiredWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.radioButtonContainer}>\n                  <h3>Blood type *</h3>\n\n                  <ul className={styles.radioButtonList}>\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"1\"\n                      id=\"1-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"2\"\n                      id=\"2-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"3\"\n                      id=\"3-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"4\"\n                      id=\"4-radio-button\"\n                    />\n                  </ul>\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.bloodType && errors.bloodType && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.bloodType}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={styles.form_button}>\n              <Button size={'large'} mainStyle={'active'} type={'submit'}>\n                Start losing weight\n              </Button>\n            </div>\n\n            <PersistFormikValues name=\"calc-form\" />\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEatenProducts } from 'redux/dailyFood/dailyFoodOperations';\nimport { selectCurrentDate } from 'redux/dailyFood/dailyFoodSlice';\nimport { DailyCaloriesForm } from 'components/DailyCaloriesForm/DailyCaloriesForm';\nimport { RightSideBar } from 'components/RightSideBar/RightSideBar';\nimport styles from './CalculatorPage.module.scss';\n\nexport const CalculatorPage = () => {\n  const dispatch = useDispatch();\n  const currentDate = useSelector(selectCurrentDate);\n\n  useEffect(() => {\n    dispatch(getEatenProducts(currentDate));\n  }, [dispatch, currentDate]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className={styles.calculatorPage}>\n          <DailyCaloriesForm />\n        </div>\n      </div>\n      <div className={styles.SidebarSection}>\n        <div className={styles.SidebarWrap}>\n          <RightSideBar />\n        </div>\n      </div>\n    </>\n  );\n};\n"],"names":["RightSideBar","notRecFood","useSelector","selectNotRecFood","calorieNorm","selectCalorieNorm","currentDate","selectCurrentDate","consumed","selectEatenProducts","reduce","acc","item","calories","Math","round","left","interest","_jsx","_Fragment","children","_jsxs","className","styles","length","map","el","i","en","Button","_ref","size","mainStyle","type","disabled","handleClick","onClick","clsx","loginSchema","yup","email","required","password","min","registerSchema","name","max","calorieSchema","height","age","currentWeight","desiredWeight","bloodType","productName","weight","positive","getCalorieAuth","createAsyncThunk","async","calcParams","thunkAPI","result","axios","post","data","getCalorieAuthApi","error","rejectWithValue","message","getCalorie","getCalorieApi","DailyCaloriesForm","handleModalOpen","InputField","_ref2","label","value","onChange","onBlur","Field","labelText","RadioButton","_ref3","id","htmlFor","check","inside","dispatch","useDispatch","navigate","useNavigate","authStatus","selectAuthStatus","Formik","initialValues","validateOnBlur","validationSchema","onSubmit","values","actions","allValue","routes","diary","_ref4","errors","touched","handleChange","handleBlur","handleSubmit","Form","caloriesForm","caloriesPadding","formContainerMain","formContainerLeft","labelContainer","caloriesFormErrorContainer","caloriesFormError","formContainerRight","radioButtonContainer","radioButtonList","form_button","PersistFormikValues","CalculatorPage","useEffect","getEatenProducts","calculatorPage","SidebarSection","SidebarWrap"],"sourceRoot":""}