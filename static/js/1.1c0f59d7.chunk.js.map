{"version":3,"file":"static/js/1.1c0f59d7.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/calorieSchema.js","helpers/validation/newProductSchema.js","webpack://slim-mom-frontend/./src/pages/MainPage/MainPage.module.scss?b09f","webpack://slim-mom-frontend/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.jsx","pages/MainPage/MainPage.jsx","services/dailyCalorieApi.js","redux/dailyCalorie/dailyCalorieOperations.js","webpack://slim-mom-frontend/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.scss?c79a","components/DailyCaloriesForm/DailyCaloriesForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"disable\":\"Button_disable__AF92d\",\"primary\":\"Button_primary__9MLUH\",\"active\":\"Button_active__iTrrO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  disabled = false,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      disabled={disabled}\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup\n    .string()\n    .min(3, 'Min number of characters is 6')\n    .max(15, 'Max number of characters is 15')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  productName: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"mainPage\":\"MainPage_mainPage__6gmrg\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__b+zEz\",\"btnContainer\":\"Modal_btnContainer__kNAnL\",\"modal\":\"Modal_modal__yEgVW\",\"title\":\"Modal_title__KuCmT\",\"modalContainer\":\"Modal_modalContainer__Xtw+V\",\"icon\":\"Modal_icon__jhXbv\",\"closeIcon\":\"Modal_closeIcon__PA6+Y\",\"caloriesContainer\":\"Modal_caloriesContainer__hfkPX\",\"calories\":\"Modal_calories__nbcp9\",\"caloriesText\":\"Modal_caloriesText__ofw+B\",\"secondaryTitle\":\"Modal_secondaryTitle__S7ktB\",\"btn\":\"Modal_btn__eZPu0\",\"list\":\"Modal_list__BMemH\",\"listItem\":\"Modal_listItem__Fa0Gg\",\"btnWrap\":\"Modal_btnWrap__jFJjm\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { NavLink } from 'react-router-dom';\nimport { useWindowSize } from 'react-use';\nimport { useSelector } from 'react-redux';\nimport { GrClose } from 'react-icons/gr';\nimport { TbArrowBack } from 'react-icons/tb';\nimport {\n  selectCalorieNorm,\n  selectIsLoadingCalorie,\n  selectNotRecFood,\n} from 'redux/dailyCalorie/dailyCalorieSlice';\nimport { routes } from 'utils/routes';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport scss from './Modal.module.scss';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, isModalOpen }) => {\n  const calorieNorm = useSelector(selectCalorieNorm);\n  const notRecFood = useSelector(selectNotRecFood);\n  const isLoading = useSelector(selectIsLoadingCalorie);\n\n  const { width } = useWindowSize();\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const onModalClose = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', onModalClose);\n\n    return () => {\n      document.body.style.overflow = 'unset';\n      window.removeEventListener('keydown', onModalClose);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <>\n      <div className={scss.overlay} onClick={handleBackdropClick}>\n        <div className={scss.modal}>\n          {width < 768 ? (\n            <div className={scss.btnContainer}>\n              <TbArrowBack className={scss.icon} onClick={() => onClose()} />\n            </div>\n          ) : (\n            <GrClose className={scss.closeIcon} onClick={() => onClose()} />\n          )}\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              <div className={scss.modalContainer}>\n                <h2 className={scss.title}>\n                  Your recommended daily calorie intake is\n                </h2>\n                <div className={scss.caloriesContainer}>\n                  <span className={scss.calories}>\n                    {calorieNorm}\n\n                    <span className={scss.caloriesText}> kcal</span>\n                  </span>\n                </div>\n                <div className={scss.listCenter}>\n                  <h2 className={scss.secondaryTitle}>\n                    Foods you should not eat\n                  </h2>\n                  <ul className={scss.list}>\n                    {notRecFood.length > 0 &&\n                      notRecFood.map((el, i) => (\n                        <li className={scss.listItem} key={i}>\n                          {i + 1}. {el.en}\n                        </li>\n                      ))}\n                  </ul>\n                  <div className={scss.btnWrap}>\n                    <NavLink to={routes.login}>\n                      <Button\n                        size={'large'}\n                        mainStyle={'active'}\n                        type={'button'}\n                      >\n                        Start losing weight\n                      </Button>\n                    </NavLink>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>,\n    modalRoot\n  );\n};\n","import { DailyCaloriesForm } from 'components/DailyCaloriesForm/DailyCaloriesForm';\nimport styles from './MainPage.module.scss';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const MainPage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n  const onClose = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <div className={styles.mainPage}>\n      <div className=\"container\">\n      <DailyCaloriesForm handleModalOpen={handleModalOpen} />\n      {isModalOpen && <Modal onClose={onClose} isModalOpen={isModalOpen} />}\n    </div>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nexport const getCalorieAuthApi = async calcParams => {\n  const response = await axios.post('/calories/auth', calcParams);\n  return response.data;\n};\n\nexport const getCalorieApi = async calcParams => {\n  const response = await axios.post('/calories', calcParams);\n  return response.data;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getCalorieAuthApi, getCalorieApi } from 'services/dailyCalorieApi';\n\nexport const getCalorieAuth = createAsyncThunk(\n  'calorie/getCalorieAuth',\n  async (calcParams, thunkAPI) => {\n    try {\n      const result = await getCalorieAuthApi(calcParams);\n\n      return result;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const getCalorie = createAsyncThunk(\n  'calorie/getCalorie',\n  async (calcParams, thunkAPI) => {\n    try {\n      const result = await getCalorieApi(calcParams);\n\n      return result;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"caloriesForm\":\"DailyCaloriesForm_caloriesForm__CjEzo\",\"caloriesPadding\":\"DailyCaloriesForm_caloriesPadding__l6bi1\",\"labelText\":\"DailyCaloriesForm_labelText__G+pBd\",\"labelContainer\":\"DailyCaloriesForm_labelContainer__lo97o\",\"formContainerF\":\"DailyCaloriesForm_formContainerF__z+3qH\",\"formContainerS\":\"DailyCaloriesForm_formContainerS__-eZFl\",\"caloriesFormErrorContainer\":\"DailyCaloriesForm_caloriesFormErrorContainer__BGDXs\",\"caloriesFormError\":\"DailyCaloriesForm_caloriesFormError__h-xJl\",\"radioButtonContainer\":\"DailyCaloriesForm_radioButtonContainer__91ucI\",\"radioButtonList\":\"DailyCaloriesForm_radioButtonList__iE1rE\",\"check\":\"DailyCaloriesForm_check__JP1e-\",\"form_button\":\"DailyCaloriesForm_form_button__+DDQQ\",\"formContainerMain\":\"DailyCaloriesForm_formContainerMain__+kjzo\",\"formContainerLeft\":\"DailyCaloriesForm_formContainerLeft__kDDqU\",\"formContainerRight\":\"DailyCaloriesForm_formContainerRight__r2vV7\",\"radioButton\":\"DailyCaloriesForm_radioButton__LfytD\"};","import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { PersistFormikValues } from 'formik-persist-values';\nimport {\n  getCalorie,\n  getCalorieAuth,\n} from 'redux/dailyCalorie/dailyCalorieOperations';\nimport { selectAuthStatus } from 'redux/auth/authSlice';\nimport { routes } from 'utils/routes';\nimport { calorieSchema } from 'helpers/validation';\nimport { Button } from 'components/Button/Button';\nimport styles from './DailyCaloriesForm.module.scss';\n\nexport const DailyCaloriesForm = ({ handleModalOpen }) => {\n  const InputField = ({ label, type, value, name, onChange, onBlur }) => (\n    <label>\n      <Field\n        required\n        type={type}\n        value={value}\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <div className={styles.labelText}>{label}</div>\n    </label>\n  );\n\n  const RadioButton = ({ name, value, id, onChange, onBlur }) => (\n    <li>\n      <Field\n        type=\"radio\"\n        value={value}\n        name={name}\n        id={id}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <label htmlFor={id}>{value}</label>\n      <div className={styles.check}>\n        <div className={styles.inside}></div>\n      </div>\n    </li>\n  );\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authStatus = useSelector(selectAuthStatus);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          currentWeight: '',\n          desiredWeight: '',\n          bloodType: '',\n        }}\n        validateOnBlur\n        validationSchema={calorieSchema}\n        onSubmit={(values, actions) => {\n          const bloodType = +values.bloodType;\n          const allValue = { ...values, bloodType };\n\n          if (authStatus) {\n            dispatch(getCalorieAuth(allValue));\n            navigate(routes.diary);\n          } else {\n            dispatch(getCalorie(allValue));\n            handleModalOpen();\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form\n            className={\n              authStatus\n                ? styles.caloriesForm\n                : `${styles.caloriesForm} ${styles.caloriesPadding}`\n            }\n            onSubmit={handleSubmit}\n          >\n            <h1>Calculate your daily calorie intake right now</h1>\n            <div className={styles.formContainerMain}>\n              <div className={styles.formContainerLeft}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Height *\"\n                    type=\"text\"\n                    name={'height'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.height}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.height && errors.height && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.height}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Age *\"\n                    type=\"text\"\n                    name={'age'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.age}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.age && errors.age && (\n                      <p className={styles.caloriesFormError}>{errors.age}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Current weight *\"\n                    type=\"text\"\n                    name={'currentWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.currentWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.currentWeight && errors.currentWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.currentWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className={styles.formContainerRight}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Desired weight *\"\n                    type=\"text\"\n                    name={'desiredWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.desiredWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.desiredWeight && errors.desiredWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.desiredWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.radioButtonContainer}>\n                  <h3>Blood type *</h3>\n\n                  <ul className={styles.radioButtonList}>\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"1\"\n                      id=\"1-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"2\"\n                      id=\"2-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"3\"\n                      id=\"3-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"4\"\n                      id=\"4-radio-button\"\n                    />\n                  </ul>\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.bloodType && errors.bloodType && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.bloodType}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={styles.form_button}>\n              <Button size={'large'} mainStyle={'active'} type={'submit'}>\n                Start losing weight\n              </Button>\n            </div>\n\n            <PersistFormikValues name=\"calc-form\" />\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n"],"names":["Button","_ref","size","mainStyle","type","disabled","children","handleClick","_jsx","onClick","className","clsx","styles","loginSchema","yup","email","required","password","min","registerSchema","name","max","calorieSchema","height","age","currentWeight","desiredWeight","bloodType","productName","weight","positive","modalRoot","document","querySelector","Modal","onClose","isModalOpen","calorieNorm","useSelector","selectCalorieNorm","notRecFood","selectNotRecFood","isLoading","selectIsLoadingCalorie","width","useWindowSize","useEffect","onModalClose","event","code","body","style","overflow","window","addEventListener","removeEventListener","createPortal","_Fragment","scss","overlay","currentTarget","target","_jsxs","modal","btnContainer","TbArrowBack","icon","GrClose","closeIcon","Loader","modalContainer","title","caloriesContainer","calories","caloriesText","listCenter","secondaryTitle","list","length","map","el","i","listItem","en","btnWrap","NavLink","to","routes","login","MainPage","setIsModalOpen","useState","DailyCaloriesForm","handleModalOpen","getCalorieAuth","createAsyncThunk","async","calcParams","thunkAPI","result","axios","post","data","getCalorieAuthApi","error","rejectWithValue","message","getCalorie","getCalorieApi","InputField","_ref2","label","value","onChange","onBlur","Field","labelText","RadioButton","_ref3","id","htmlFor","check","inside","dispatch","useDispatch","navigate","useNavigate","authStatus","selectAuthStatus","Formik","initialValues","validateOnBlur","validationSchema","onSubmit","values","actions","allValue","diary","_ref4","errors","touched","handleChange","handleBlur","handleSubmit","Form","caloriesForm","caloriesPadding","formContainerMain","formContainerLeft","labelContainer","caloriesFormErrorContainer","caloriesFormError","formContainerRight","radioButtonContainer","radioButtonList","form_button","PersistFormikValues"],"sourceRoot":""}