{"version":3,"file":"static/js/558.5c76bbff.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://slim-mom-frontend/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","webpack://slim-mom-frontend/./src/pages/LoginPage/LoginPage.module.scss?8fcb","pages/LoginPage/LoginPage.jsx","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/calorieSchema.js","helpers/validation/newProductSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"disable\":\"Button_disable__AF92d\",\"primary\":\"Button_primary__9MLUH\",\"active\":\"Button_active__iTrrO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  disabled = false,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      disabled={disabled}\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"LoginForm_heading__ST5SC\",\"formWrapper\":\"LoginForm_formWrapper__isp4j\",\"label\":\"LoginForm_label__RGIMj\",\"text\":\"LoginForm_text__B2UU8\",\"input\":\"LoginForm_input__7Ngg7\",\"buttonWrapper\":\"LoginForm_buttonWrapper__GyBKJ\",\"error\":\"LoginForm_error__cEL5X\"};","import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { loginUser } from 'redux/auth/authOperations';\nimport { clearError, selectIsLoading } from 'redux/auth/authSlice';\nimport { routes } from 'utils/routes';\nimport { loginSchema } from 'helpers/validation';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport styles from './LoginForm.module.scss';\n\nexport const LoginForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const { handleSubmit, errors, handleChange, values, submitCount } = useFormik(\n    {\n      initialValues: {\n        email: '',\n        password: '',\n      },\n      onSubmit: values => {\n        dispatch(clearError());\n        dispatch(loginUser(values));\n      },\n      validationSchema: loginSchema,\n    }\n  );\n\n  return (\n    <>\n      <p className={styles.heading}>Log in</p>\n      {isLoading && <Loader />}\n      <form className={styles.caloriesForm} onSubmit={handleSubmit} noValidate>\n        <div className={styles.formWrapper}>\n          <label className={styles.labelText}>\n            <span className={styles.text}>Email</span>\n            <div className={styles.formContainerMain}>\n              <div className={styles.formContainerLeft}>\n                <div className={styles.labelContainer}>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    className={styles.input}\n                    onChange={handleChange}\n                    value={values.email}\n                  />\n                </div>\n              </div>\n            </div>\n            {submitCount > 0 && errors.email && (\n              <span className={styles.error}>{errors.email}</span>\n            )}\n          </label>\n          <label className={styles.label}>\n            <span className={styles.text}>Password</span>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className={styles.input}\n              onChange={handleChange}\n              value={values.password}\n            />\n            {submitCount > 0 && errors.password && (\n              <span className={styles.error}>{errors.password}</span>\n            )}\n          </label>\n        </div>\n        <div className={styles.buttonWrapper}>\n          <Button type=\"submit\" mainStyle=\"active\">\n            Log in\n          </Button>\n          <Button\n            type=\"button\"\n            mainStyle=\"primary\"\n            handleClick={e => {\n              e.preventDefault();\n              navigate(routes.register, { replace: true });\n            }}\n          >\n            Register\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"LoginPage_formWrapper__ppMsG\",\"loginPage\":\"LoginPage_loginPage__9b87u\"};","import { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { selectError } from 'redux/auth/authSlice';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport styles from './LoginPage.module.scss';\n\nexport const LoginPage = () => {\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (error && error !== \"User doesn't exist\") {\n      Notiflix.Notify.failure(`Email or password is wrong. Try again`);\n    }\n  }, [error]);\n\n  return (\n    <div className={styles.loginPage}>\n      <div className=\"container\">\n        <div className={styles.formWrapper}>\n          <LoginForm />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup\n    .string()\n    .min(3, 'Min number of characters is 6')\n    .max(15, 'Max number of characters is 15')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  productName: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n"],"names":["Button","_ref","size","mainStyle","type","disabled","children","handleClick","_jsx","onClick","className","clsx","styles","LoginForm","navigate","useNavigate","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","handleSubmit","errors","handleChange","values","submitCount","useFormik","initialValues","email","password","onSubmit","clearError","loginUser","validationSchema","loginSchema","_jsxs","_Fragment","heading","Loader","caloriesForm","noValidate","formWrapper","labelText","text","formContainerMain","formContainerLeft","labelContainer","name","input","onChange","value","error","label","buttonWrapper","e","preventDefault","routes","register","replace","LoginPage","selectError","useEffect","Notiflix","failure","yup","required","min","registerSchema","max","calorieSchema","height","age","currentWeight","desiredWeight","bloodType","productName","weight","positive"],"sourceRoot":""}