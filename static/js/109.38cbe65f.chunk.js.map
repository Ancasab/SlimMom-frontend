{"version":3,"file":"static/js/109.38cbe65f.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://slim-mom-frontend/./src/components/RegistrationForm/RegistrationForm.module.scss?6285","components/RegistrationForm/RegistrationForm.jsx","webpack://slim-mom-frontend/./src/pages/RegistrationPage/RegistrationPage.module.scss?bbbb","pages/RegistrationPage/RegistrationPage.jsx","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/calorieSchema.js","helpers/validation/newProductSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"disable\":\"Button_disable__AF92d\",\"primary\":\"Button_primary__9MLUH\",\"active\":\"Button_active__iTrrO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  disabled = false,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      disabled={disabled}\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"RegistrationForm_heading__Y8ZMd\",\"formWrapper\":\"RegistrationForm_formWrapper__5Qa+p\",\"label\":\"RegistrationForm_label__YgknQ\",\"text\":\"RegistrationForm_text__c0gNN\",\"input\":\"RegistrationForm_input__TbLYl\",\"buttonWrapper\":\"RegistrationForm_buttonWrapper__PQk8l\",\"error\":\"RegistrationForm_error__39hF+\"};","import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport Notiflix from 'notiflix';\nimport { selectIsLoading } from 'redux/auth/authSlice';\nimport { loginUser } from 'redux/auth/authOperations';\nimport { routes } from 'utils/routes';\nimport { registerSchema } from 'helpers/validation';\nimport { registerUserApi } from 'services/authApi';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport styles from './RegistrationForm.module.scss';\n\nexport const RegistrationForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const { handleSubmit, errors, handleChange, values, submitCount } = useFormik(\n    {\n      initialValues: {\n        name: '',\n        email: '',\n        password: '',\n      },\n      onSubmit: async (values, { setFieldError }) => {\n        try {\n          await registerUserApi(values);\n          dispatch(\n            loginUser({ email: values.email, password: values.password })\n          );\n          Notiflix.Notify.success('Registration has been successful');\n        } catch (error) {\n          const serverResponse = error.response.data;\n          setFieldError('email', 'Email already exists');\n          Notiflix.Notify.failure(`${serverResponse.message}. Try again`);\n        }\n      },\n      validationSchema: registerSchema,\n    }\n  );\n\n  return (\n    <>\n      <p className={styles.heading}>Register</p>\n      {isLoading && <Loader />}\n      <form onSubmit={handleSubmit} noValidate>\n        <div className={styles.formWrapper}>\n          <label className={styles.label}>\n            <span className={styles.text}>Name</span>\n            <input\n              type=\"text\"\n              name=\"name\"\n              className={styles.input}\n              onChange={handleChange}\n              value={values.name}\n            />\n            {submitCount > 0 && errors.name && (\n              <span className={styles.error}>{errors.name}</span>\n            )}\n          </label>\n          <label className={styles.label}>\n            <span className={styles.text}>Email</span>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className={styles.input}\n              onChange={handleChange}\n              value={values.email}\n            />\n            {submitCount > 0 && errors.email && (\n              <span className={styles.error}>{errors.email}</span>\n            )}\n          </label>\n          <label className={styles.label}>\n            <span className={styles.text}>Password</span>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className={styles.input}\n              onChange={handleChange}\n              value={values.password}\n            />\n            {submitCount > 0 && errors.password && (\n              <span className={styles.error}>{errors.password}</span>\n            )}\n          </label>\n        </div>\n\n        <div className={styles.buttonWrapper}>\n          <Button type=\"submit\" mainStyle=\"active\">\n            Register\n          </Button>\n          <Button\n            type=\"button\"\n            mainStyle=\"primary\"\n            handleClick={e => {\n              e.preventDefault();\n              navigate(routes.login, { replace: true });\n            }}\n          >\n            Log in\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"RegistrationPage_formWrapper__gICyB\",\"registerPage\":\"RegistrationPage_registerPage__pHe4C\"};","import { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport styles from './RegistrationPage.module.scss';\n\nexport const RegistrationPage = () => {\n  return (\n    <div className={styles.registerPage}>\n      <div className=\"container\">\n        <div className={styles.formWrapper}>\n          <RegistrationForm />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup\n    .string()\n    .min(3, 'Min number of characters is 6')\n    .max(15, 'Max number of characters is 15')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  productName: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n"],"names":["Button","_ref","size","mainStyle","type","disabled","children","handleClick","_jsx","onClick","className","clsx","styles","RegistrationForm","navigate","useNavigate","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","handleSubmit","errors","handleChange","values","submitCount","useFormik","initialValues","name","email","password","onSubmit","async","setFieldError","registerUserApi","loginUser","Notiflix","success","error","serverResponse","response","data","failure","message","validationSchema","registerSchema","_jsxs","_Fragment","Loader","noValidate","onChange","value","e","preventDefault","routes","login","replace","RegistrationPage","loginSchema","yup","required","min","max","calorieSchema","height","age","currentWeight","desiredWeight","bloodType","productName","weight","positive"],"sourceRoot":""}